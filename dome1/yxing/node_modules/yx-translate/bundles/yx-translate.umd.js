(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/http')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/http'], factory) :
	(factory((global.ng = global.ng || {}, global.ng.yxTranslate = global.ng.yxTranslate || {}),global.ng.core,global.ng.common,global.ng.http));
}(this, (function (exports,_angular_core,_angular_common,_angular_http) { 'use strict';

var TranslateConfig = (function () {
    function TranslateConfig() {
    }
    return TranslateConfig;
}());
var TranslateService = (function () {
    function TranslateService(translateConfig, http) {
        this.translateConfig = translateConfig;
        this.http = http;
        this.language = translateConfig.language;
        this.folder = translateConfig.folder;
        this.reloadTranslations();
    }
    TranslateService.prototype.reloadTranslations = function () {
        var _this = this;
        var savedLang = localStorage.getItem('yx_language');
        if (savedLang) {
            this.language = savedLang;
        }
        this.http.get(this.folder + '/' + this.language + '.json').subscribe(function (res) {
            _this.translations = res.json();
        });
    };
    TranslateService.prototype.translate = function (value) {
        if (!this.translations) {
            return value;
        }
        var translation = this.translations[value];
        if (translation) {
            return translation;
        }
        else {
            return value;
        }
    };
    TranslateService.prototype.changeLanguage = function (value) {
        if (value !== this.language) {
            localStorage.setItem('yx_language', value);
            location.reload();
        }
    };
    return TranslateService;
}());
TranslateService.decorators = [
    { type: _angular_core.Injectable },
];
/** @nocollapse */
TranslateService.ctorParameters = function () { return [
    { type: TranslateConfig, decorators: [{ type: _angular_core.Inject, args: ["translate.config",] },] },
    { type: _angular_http.Http, },
]; };

var TranslatePipe = (function () {
    function TranslatePipe(translateService) {
        this.translateService = translateService;
    }
    TranslatePipe.prototype.transform = function (value, args) {
        return this.translateService.translate(value);
    };
    return TranslatePipe;
}());
TranslatePipe.decorators = [
    { type: _angular_core.Pipe, args: [{
                name: 'translate'
            },] },
];
/** @nocollapse */
TranslatePipe.ctorParameters = function () { return [
    { type: TranslateService, },
]; };

var TranslateModule = (function () {
    function TranslateModule() {
    }
    TranslateModule.forRoot = function (language, folder) {
        var translateConfig = new TranslateConfig();
        translateConfig.folder = 'assets/yx-i18n';
        translateConfig.language = 'en';
        if (language) {
            translateConfig.language = language;
        }
        if (folder) {
            translateConfig.folder = folder;
        }
        return {
            ngModule: TranslateModule,
            providers: [
                TranslateService,
                { provide: "translate.config", useValue: translateConfig }
            ]
        };
    };
    return TranslateModule;
}());
TranslateModule.decorators = [
    { type: _angular_core.NgModule, args: [{
                imports: [
                    _angular_common.CommonModule
                ],
                exports: [
                    TranslatePipe
                ],
                declarations: [TranslatePipe]
            },] },
];
/** @nocollapse */
TranslateModule.ctorParameters = function () { return []; };

exports.TranslateModule = TranslateModule;
exports.TranslateService = TranslateService;
exports.TranslatePipe = TranslatePipe;

Object.defineProperty(exports, '__esModule', { value: true });

})));
