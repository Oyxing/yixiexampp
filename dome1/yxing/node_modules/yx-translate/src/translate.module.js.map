{"version":3,"sources":["../../src/translate.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAsB,QAAA,EAAS,MAAM,eAAA,CAAgB;AAC5D,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAC/C,OAAO,EAAE,aAAA,EAAc,MAAO,wBAAA,CAAyB;AACvD,OAAO,EAAA,eAAE,EAAgB,gBAAA,EAAiB,MAAM,8BAAA,CAA+B;AAG/E;IAAA;IAsCA,CAAC;IApCQ,uBAAO,GAAd,UAAe,QAAiB,EAAE,MAAe;QAE/C,IAAI,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;QAC5C,eAAe,CAAC,MAAM,GAAG,gBAAgB,CAAC;QAC1C,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAC;QAEhC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,eAAe,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACtC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,eAAe,CAAC,MAAM,GAAG,MAAM,CAAC;QAClC,CAAC;QAED,MAAM,CAAC;YACL,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE;gBACT,gBAAgB;gBAChB,EAAC,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,eAAe,EAAC;aACzD;SACF,CAAC;IACJ,CAAC;IAgBH,sBAAC;AAAD,CAtCA,AAsCC;;AAdM,0BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,OAAO,EAAE;oBACP,aAAa;iBACd;gBACD,YAAY,EAAE,CAAC,aAAa,CAAC;aAC9B,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"translate.module.js","sourceRoot":"","sourcesContent":["import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslatePipe } from './pipes/translate.pipe';\nimport {TranslateConfig, TranslateService} from \"./services/translate.service\";\n\n\nexport class TranslateModule {\n\n  static forRoot(language?: string, folder?: string): ModuleWithProviders {\n\n    let translateConfig = new TranslateConfig();\n    translateConfig.folder = 'assets/yx-i18n';\n    translateConfig.language = 'en';\n\n    if (language) {\n      translateConfig.language = language;\n    }\n    if (folder) {\n      translateConfig.folder = folder;\n    }\n\n    return {\n      ngModule: TranslateModule,\n      providers: [\n        TranslateService,\n        {provide: \"translate.config\", useValue: translateConfig}\n      ]\n    };\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TranslatePipe\n  ],\n  declarations: [TranslatePipe]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}