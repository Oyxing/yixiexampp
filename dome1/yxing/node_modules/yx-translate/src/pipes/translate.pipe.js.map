{"version":3,"sources":["../../../src/pipes/translate.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AACpD,OAAO,EAAA,gBAAE,EAAgB,MAAM,+BAAA,CAAgC;AAG/D;IAEE,uBAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAE1D,iCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;IAWH,oBAAC;AAAD,CAjBA,AAiBC;;AATM,wBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBACnB,IAAI,EAAE,WAAW;aAClB,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,4BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,gBAAgB,GAAG;CACzB,EAF6F,CAE7F,CAAC","file":"translate.pipe.js","sourceRoot":"","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport {TranslateService} from \"../services/translate.service\";\n\n\nexport class TranslatePipe implements PipeTransform {\n\n  constructor(private translateService: TranslateService) {}\n\n  transform(value: any, args?: any): any {\n    return this.translateService.translate(value);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'translate'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TranslateService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}